#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

# https://github.com/dotnet/dotnet-docker/blob/main/samples/aspnetapp/Dockerfile.ubuntu
# Learn about building .NET container images:
FROM mcr.microsoft.com/dotnet/sdk:6.0-jammy AS build
WORKDIR /src


LABEL maintainer="gaelgael5@gmail.com" github="https://github.com/Moleculars/Parrot"


WORKDIR /src/Black.Beard.Curl
# copy csproj in the image and restore packages
# COPY Black.Beard.Curl/Black.Beard.Curl.csproj .
# copy csproj in the image and restore packages
COPY Black.Beard.Curl/* .
RUN dotnet restore --use-current-runtime
# RUN dotnet build Black.Beard.Curl.csproj -c Release -o /app/build



WORKDIR /src/Black.Beard.OpenApi
# copy csproj in the image and restore packages
# COPY Black.Beard.OpenApi/Black.Beard.OpenApi.csproj .
COPY Black.Beard.OpenApi/* .
RUN dotnet restore --use-current-runtime
# RUN dotnet build -c Release -o /app/build


WORKDIR /src/Black.Beard.OpenApiServices
# copy csproj in the image and restore packages
# COPY Black.Beard.OpenApiServices/Black.Beard.OpenApiServices.csproj .
COPY Black.Beard.OpenApiServices/ .
RUN dotnet restore --use-current-runtime
# RUN dotnet build -c Release -o /app/build


WORKDIR /src/ParrotServices
# copy csproj in the image and restore packages
# COPY Black.Beard.ParrotServices/Black.Beard.ParrotServices.csproj .
COPY Black.Beard.ParrotServices/* .
RUN dotnet restore --use-current-runtime
# RUN dotnet publish Black.Beard.ParrotServices.csproj -c Release -o /app/build

RUN dotnet publish --use-current-runtime --self-contained false --no-restore -o /app


# final stage/image
# FROM mcr.microsoft.com/dotnet/aspnet:6.0-jammy
# WORKDIR /app
# COPY --from=build /app .

EXPOSE 80
EXPOSE 443

# ENTRYPOINT ["./aspnetapp"]
# ENTRYPOINT ["dotnet.exe", "Black.Beard.ParrotServices.dll"]